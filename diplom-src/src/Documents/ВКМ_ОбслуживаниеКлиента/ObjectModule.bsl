#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПроведения(Отказ,Режим)
	
	Если Не ДоговорДействителен() Тогда
		ОбщегоНазначения.СообщитьПользователю("Проверьте договор на актуальность и заполненность работ в документе.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
			
	СтоимостьЧаса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВКМ_Договор, "ВКМ_СтоимостьЧасаРабот"); 
	ПроцентОтРабот = ПроцентОтРабот(ВКМ_Специалист);
	
	Если ПроцентОтРабот = Неопределено Тогда 
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Сотруднику %1 не назначен процент от работ. Документ не проведен.", ВКМ_Специалист));
		Отказ = Истина; 
		Возврат;
	КонецЕсли;
		
	// регистр ВКМ_ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	
	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
	Движение.Период = Дата;
	Движение.ВКМ_Клиент = ВКМ_Клиент;
	Движение.ВКМ_Договор = ВКМ_Договор;
	ЧасыКОплатеКлиенту = 0;
	Для Каждого ТекСтрокаВКМ_ВыполненныеРаботы из ВКМ_ВыполненныеРаботы Цикл
		ЧасыКОплатеКлиенту = ЧасыКОплатеКлиенту + ТекСтрокаВКМ_ВыполненныеРаботы.ВКМ_ЧасыКОплатеКлиенту;
	КонецЦикла;
	Движение.ВКМ_КоличествоЧасов = ЧасыКОплатеКлиенту;
	Движение.ВКМ_СуммаКОплате = ЧасыКОплатеКлиенту * СтоимостьЧаса;

	// регистр ВКМ_ВыполненныеСотрудникомРаботы 
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
	Движение.Период = Дата;
	Движение.ВКМ_Сотрудник = ВКМ_Специалист;
	Движение.ВКМ_ЧасовКОплате = ЧасыКОплатеКлиенту;
	Движение.ВКМ_СуммаКОплате = ЧасыКОплатеКлиенту * СтоимостьЧаса * ПроцентОтРабот / 100;
	
КонецПроцедуры

Функция ДоговорДействителен()
	
	ПериодДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВКМ_Договор, "ВКМ_ДатаНачалаДействияДоговора, ВКМ_ДатаОкончанияДействияДоговора");
	
	ДатаНачалаДоговора = ПериодДоговора.ВКМ_ДатаНачалаДействияДоговора;
	ДатаОкончанияДоговора = ПериодДоговора.ВКМ_ДатаОкончанияДействияДоговора;
	ДатаДоговораДействительна = (Дата > ДатаНачалаДоговора) И (Дата < ДатаОкончанияДоговора);
	ТипДоговораАбОбслуживание = (ВКМ_Договор.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание"));
	
	РаботыНеВнесеныВДокумент = ВКМ_ВыполненныеРаботы.Количество() = 0;
	
	Если Не ТипДоговораАбОбслуживание ИЛИ НЕ ДатаДоговораДействительна ИЛИ РаботыНеВнесеныВДокумент Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

Функция ПроцентОтРабот(Сотрудник);

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_ПроцентОтРабот КАК ВКМ_ПроцентОтРабот
	               |ИЗ
	               |	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(, ВКМ_Сотрудник = &Сотрудник) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних"; 
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда 
		Возврат Неопределено;
	Иначе  
		Возврат Результат[0].ВКМ_ПроцентОтРабот;
	КонецЕсли;
	
КонецФункции

#КонецЕсли