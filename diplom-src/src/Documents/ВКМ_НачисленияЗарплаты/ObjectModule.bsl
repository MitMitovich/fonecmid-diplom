
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина; 
	Движения.ВКМ_Удержания.Записывать = Истина;
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	СоздатьДвижения(); 
	
	ОкладРассчитан = РасчетОклада();
	
	Если Не ОкладРассчитан Тогда 
		ОбщегоНазначения.СообщитьПользователю("Проведение документа отменено");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	РасчетОтпуска(); 
	РасчетПремии();
	РасчетНДФЛ();
	РасчетЗарплатыКВыплате();
		
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура СоздатьДвижения()

	//регистр ВКМ_ОсновныеНачисления
	Для Каждого Строка Из ВКМ_ОсновныеНачисления Цикл 
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ВидРасчета = Строка.ВКМ_ВидРасчета;
		Движение.ПериодДействияНачало = Строка.ВКМ_ДатаНачала;
		Движение.ПериодДействияКонец = Строка.ВКМ_ДатаОкончания;
		Движение.ПериодРегистрации = Дата;
		Движение.ВКМ_Сотрудник = Строка.ВКМ_Сотрудник;
		Движение.ВКМ_ГрафикРаботы = Строка.ВКМ_ГрафикРаботы;
		
		Если Строка.ВКМ_ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда 
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Строка.ВКМ_ДатаНачала, -12));
		    Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Строка.ВКМ_ДатаОкончания, -1));
		ИначеЕсли Строка.ВКМ_ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда 
			Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		    Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		КонецЕсли;
				
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
	//регистр ВКМ_ДополнительныеНачисления
	Для Каждого Строка Из ВКМ_ДополнительныеНачисления Цикл 
		
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ВидРасчета = Строка.ВКМ_ВидРасчета;
		Движение.ПериодРегистрации = Дата;
		Движение.ВКМ_Сотрудник = Строка.ВКМ_Сотрудник;
		
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	Данные = ДанныеДляУдержания();
	
	Для Каждого Строка Из Данные Цикл 
		
		//регистр ВКМ_Удержания
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.ВКМ_Сотрудник = Строка.Сотрудник;
		Движение.ПериодРегистрации = Дата; 
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры 

Функция РасчетОклада()
	
	ОкладРассчитан = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Оклад, 0) КАК Оклад,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_Сотрудник КАК Сотрудник,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ДнейФактическийПериодДействия КАК ОтработаноДней,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ДнейПериодДействия КАК ДнейПериодДействия
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	               |			Регистратор = &Ссылка
	               |				И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Оклад)) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	               |				&Дата,
	               |				ВКМ_Сотрудник В
	               |					(ВЫБРАТЬ
	               |						ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК ВКМ_Сотрудник
	               |					ИЗ
	               |						Документ.ВКМ_НачисленияЗарплаты.ВКМ_ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления
	               |					ГДЕ
	               |						ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.Ссылка = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	               |		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник";
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Если Выборка.Оклад = 0 Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Для сотрудника %1 не установлен оклад", 
													Выборка.Сотрудник),
													,
													СтрШаблон("ВКМ_ОсновныеНачисления[%1].ВКМ_Сотрудник", XMLСтрока(Выборка.НомерСтроки - 1)));
													
			ОкладРассчитан = Ложь;
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.ВКМ_Показатель = Выборка.Оклад; 
		Движение.ВКМ_ОтработаноДней = Выборка.ОтработаноДней;  
		
		Если Выборка.ДнейПериодДействия = Выборка.ОтработаноДней Тогда 
			Движение.ВКМ_Результат = Выборка.Оклад;
		Иначе
			Движение.ВКМ_Результат = (Выборка.Оклад / Выборка.ДнейПериодДействия) * Выборка.ОтработаноДней;
		КонецЕсли;
				
	КонецЦикла;
	
	Если ОкладРассчитан Тогда 
		Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	КонецЕсли;
		
	Возврат ОкладРассчитан;
	
КонецФункции  

Процедура РасчетОтпуска()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_РезультатБаза, 0) КАК База,
	               |	РАЗНОСТЬДАТ(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияНачало, ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияКонец, ДЕНЬ) + 1 КАК ФактДней,
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_ОтработаноДнейБаза КАК ОтработаноДнейБаза,
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК Сотрудник,
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
	               |			&Измерения,
	               |			&Измерения,
	               |			,
	               |			Регистратор = &Ссылка
	               |				И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск)) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления";
	
	Измерения = Новый Массив;
	Измерения.Добавить("ВКМ_Сотрудник");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.ВКМ_Показатель = Выборка.База / Выборка.ОтработаноДнейБаза;
		Движение.ВКМ_Результат = Выборка.ФактДней * Движение.ВКМ_Показатель;
		Движение.ВКМ_ДнейОтпуска = (Выборка.ПериодДействияКонец + 1 - Выборка.ПериодДействияНачало) / (24 * 3600);
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);

КонецПроцедуры

Процедура РасчетПремии()
	
	ЕстьПроцент = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_ПроцентОтРабот КАК ПроцентОтРабот,
	               |	ВКМ_ВыполненныеСотрудникомРаботыОбороты.ВКМ_СуммаКОплатеОборот КАК СуммаКОплатеОборот,
	               |	ВКМ_ДополнительныеНачисления.НомерСтроки КАК НомерСтроки
	               |ИЗ
	               |	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Месяц,
	               |			ВКМ_Сотрудник В
	               |				(ВЫБРАТЬ
	               |					ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления.ВКМ_Сотрудник КАК ВКМ_Сотрудник
	               |				ИЗ
	               |					Документ.ВКМ_НачисленияЗарплаты.ВКМ_ДополнительныеНачисления КАК ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления
	               |				ГДЕ
	               |					ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления.Ссылка = &Ссылка)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	               |				&Дата,
	               |				ВКМ_Сотрудник В
	               |					(ВЫБРАТЬ
	               |						ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления.ВКМ_Сотрудник КАК ВКМ_Сотрудник
	               |					ИЗ
	               |						Документ.ВКМ_НачисленияЗарплаты.ВКМ_ДополнительныеНачисления КАК ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления
	               |					ГДЕ
	               |						ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления.Ссылка = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	               |		ПО ВКМ_ВыполненныеСотрудникомРаботыОбороты.ВКМ_Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	               |		ПО ВКМ_ВыполненныеСотрудникомРаботыОбороты.ВКМ_Сотрудник = ВКМ_ДополнительныеНачисления.ВКМ_Сотрудник
	               |ГДЕ
	               |	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	               |	И ВКМ_ДополнительныеНачисления.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ДополнительныеНачисления.ПроцентОтРабот)"; 
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.ВКМ_ДополнительныеНачисления[Выборка.НомерСтроки - 1];
		Движение.ВКМ_Процент = Выборка.ПроцентОтРабот;
		Движение.ВКМ_Результат = Выборка.СуммаКОплатеОборот;
		ЕстьПроцент = Истина;
		
	КонецЦикла;
	
	Если ЕстьПроцент Тогда 
		Движения.ВКМ_ДополнительныеНачисления.Записать(, Истина); 
	КонецЕсли;
		
КонецПроцедуры

Процедура РасчетНДФЛ()
	
	НДФЛУдержан = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
						|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
						|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
						|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
						|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК Сотрудник,
						|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.ВКМ_РезультатБаза, 0) КАК РезультатБазаОсн,
						|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.ВКМ_РезультатБаза, 0) КАК РезультатБазаДоп
						|ИЗ
						|	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения, &Разрезы, Регистратор = &Ссылка) КАК
						|		ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
						|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, &Разрезы,
						|			Регистратор = &Ссылка) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
						|		ПО ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.ВКМ_Сотрудник = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.ВКМ_Сотрудник";


	Измерения = Новый Массив;
	Измерения.Добавить("ВКМ_Сотрудник");
	
	Разрезы = Новый Массив;
	Разрезы.Добавить("Регистратор");	
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Разрезы", Разрезы);   

	
	Выборка = Запрос.Выполнить().Выбрать(); 
	НДФЛ = 13;
	
	Пока Выборка.Следующий() Цикл                               
		
		Если ВКМ_ДополнительныеНачисления.Количество() > 0 Тогда
			Показатель = Выборка.РезультатБазаОсн + Выборка.РезультатБазаДоп;
		Иначе 
			Показатель = Выборка.РезультатБазаОсн;
		КонецЕсли;
		
		Удержание = Показатель * НДФЛ / 100;
		
		//Регистр ВКМ_Удержания
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Движение.ВКМ_Показатель = Показатель;
		Движение.ВКМ_Результат = Удержание;  
		
		НДФЛУдержан = Истина;
		
	КонецЦикла;
	
	Если НДФЛУдержан Тогда 
		Движения.ВКМ_Удержания.Записать(, Истина);
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеДляУдержания()


	НаборЗаписейОсн = РегистрыРасчета.ВКМ_ОсновныеНачисления.СоздатьНаборЗаписей();
	НаборЗаписейОсн.Отбор.Регистратор.Значение = Ссылка; 
	НаборЗаписейОсн.Прочитать();                         
	
	НаборЗаписейДоп = РегистрыРасчета.ВКМ_ДополнительныеНачисления.СоздатьНаборЗаписей();
	НаборЗаписейДоп.Отбор.Регистратор.Значение = Ссылка;
	НаборЗаписейДоп.Прочитать();
	
	ТЗДляУдержаний = Новый ТаблицаЗначений;
	ТЗДляУдержаний.Колонки.Добавить("Сотрудник");
	ТЗДляУдержаний.Колонки.Добавить("Результат");
		
	Для Каждого Строка Из НаборЗаписейОсн Цикл 
		
		нСтрока = ТЗДляУдержаний.Добавить();
		нСтрока.Сотрудник = Строка.ВКМ_Сотрудник;
		нСтрока.Результат = Строка.ВКМ_Результат;
		
	КонецЦикла;  
	
	Для Каждого Строка Из НаборЗаписейДоп Цикл 
		
		нСтрока = ТЗДляУдержаний.Добавить();
		нСтрока.Сотрудник = Строка.ВКМ_Сотрудник;
		нСтрока.Результат = Строка.ВКМ_Результат;
		
	КонецЦикла;
	
	ТЗДляУдержаний.Свернуть("Сотрудник", "Результат");
	
	Возврат ТЗДляУдержаний;

КонецФункции

Процедура РасчетЗарплатыКВыплате() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
						|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК Сотрудник,
						|	ЕСТЬNULL(ВКМ_ОсновныеНачисления.ВКМ_Результат, 0) КАК РезультатНачисления
						|ПОМЕСТИТЬ ВТ_Начисления
						|ИЗ
						|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
						|ГДЕ
						|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
						|
						|ОБЪЕДИНИТЬ ВСЕ
						|
						|ВЫБРАТЬ
						|	ВКМ_ДополнительныеНачисления.ВКМ_Сотрудник,
						|	ЕСТЬNULL(ВКМ_ДополнительныеНачисления.ВКМ_Результат, 0)
						|ИЗ
						|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
						|ГДЕ
						|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
						|;
						|
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	ВТ_Начисления.Сотрудник КАК Сотрудник,
						|	СУММА(ВТ_Начисления.РезультатНачисления) КАК РезультатНачисления
						|ПОМЕСТИТЬ ВТ_ГРуппировка
						|ИЗ
						|	ВТ_Начисления КАК ВТ_Начисления
						|СГРУППИРОВАТЬ ПО
						|	ВТ_Начисления.Сотрудник
						|;
						|
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	ВТ_ГРуппировка.Сотрудник КАК Сотрудник,
						|	ВТ_ГРуппировка.РезультатНачисления КАК РезультатНачисления,
						|	СУММА(ВКМ_Удержания.ВКМ_Результат) КАК НДФЛ
						|ИЗ
						|	ВТ_ГРуппировка КАК ВТ_ГРуппировка
						|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
						|		ПО ВТ_ГРуппировка.Сотрудник = ВКМ_Удержания.ВКМ_Сотрудник
						|ГДЕ
						|	ВКМ_Удержания.Регистратор = &Ссылка
						|СГРУППИРОВАТЬ ПО
						|	ВТ_ГРуппировка.Сотрудник,
						|	ВТ_ГРуппировка.РезультатНачисления";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.ВКМ_Сотрудник = Выборка.Сотрудник;
		Движение.ВКМ_Сумма = Выборка.РезультатНачисления - Выборка.НДФЛ;
			
	КонецЦикла;	
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();	
			
КонецПроцедуры

#КонецОбласти


#КонецЕсли
